Learning git
git installation & setup

*configure git

git config --global (.git-config it will contain our personal data information)

git config --system (data of system users )

git config --local ( particular projects repo information)

git config --global user.name "rajsing" 
git config --global user.email "githubloginmail" 

git config --global -e (to see or edit the global config data)

git config --list (shows the total configuration details).


* help
git help config

* windows configure notepad

install notepad++


after come to c folder + program files *86 + click on notepad++ + under inside application + above copy the path 


this pc + right click + propeties + click on advanced system settings + click on environment variables + under system variable click on path check on click on edit
click on new + paste ur notepad ++ path + ok + ok + ok.


go to git bash type notepad++ filename (it will open your notepad ++ application).

to resize the name
notepad++ .bash_profile
alias code='notepad++ .exe -multiInst -nosession'

save it
type code in gitbash

* to make any code editor as default editor

git config --global core.editor "notepad++ .exe  -multiInst -nosession'



* git work flow

terms
clone
tracked/untracked files (.git it will track everything)
branch

******** heart of git flow
local (working directory + stagging area or indix area + repository .git folder) ==> remote git hub

examples:
terms:
master
origin

the default branch is master according to our requirement we will crete feature branches 
the default server name is origin


create ur folder
clone the github url

make any changes

git staus
now our file in working directory we need to move stagging area for that
git add filename (revert back git restore filename)

git commit -m "message"  (by doing this it will go from staging to local repo)


now from your local repo to remote server you need to push the code.

git push origin master


********* to add an existing github account to code

git remote add origin YOUR_REMOTE_REPOSITORY_URL
** fatal: remote origin already exists.
to solve above issue

git remote set-url origin https://github.com/rajeshsingamsetti/Revision.git

git remote -v

git push -u origin master


* git status shortcuts
git status --short
git status --??
git status --A
git status --M


** ignoring files
vi .gitignore
filename.php (all location file name ignore)
/filename.php (cureent folder file)
* .txt
* .js
!main.js (don't take all js only take main.js file)
build/

**** Git Diff (shows the content where changed (git status will shows the changed file name))

it will shows the difference netween working directory file && stagging directory file

git diff --staged


**** git commit

git commit -v(willl give huge amount information)

git commit -m "message"



**** git log


we will know the complete history about that project

git log 
git log  -p (it will shows the diff between each every 2 commits)

git log -2 (displays the latest 2 commits)

git log --pretty=oneline
git log --pretty=short
git log --pretty=full


********** git branching *****************





























